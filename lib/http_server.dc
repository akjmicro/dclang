"string.dc" import

# some important constants
7651 const HTTP_PORT
8192 const HTTP_BUFSIZE
# create a listening server and its buffer
var srv_queue HTTP_PORT tcplisten srv_queue !
var connbuf HTTP_BUFSIZE mkbuf connbuf !
var received
# connection handle lives in this net variable
var accepted_conn
# incoming request string variables
var method
var path_and_query
var httpversion
var path
var query
"?" const :QMARK
": " const :COLON
# strtok string-splitting token storage
var _split1
var _split2
var _split_hash
var _split_q
# response headers
"HTTP/1.1 200 OK\nContent-Type: text/plain\n\n" const HTTP_TEXT_HEADER
"HTTP/1.1 200 OK\nContent-Type: text/html\n\n" const HTTP_HTML_HEADER

# getters and setters
: get_accepted_conn accepted_conn @ ;
: get_connbuf connbuf @ ;
: get_received received @ ;
: zerobuf get_connbuf 0 HTTP_BUFSIZE memset ;
: get_method method @ ;
: get_path_and_query path_and_query @ ;
: get_httpversion httpversion @ ;
: get_path path @ ;
: get_query query @ ;

##################
# relevant words #
##################

: read_incoming
  zerobuf
  get_accepted_conn swap HTTP_BUFSIZE read drop
  get_connbuf strdup received !
;

: split_request_topline
  get_received " " _split1 strtok method !
  0 " " _split1 strtok path_and_query !
  0 " " _split1 strtok httpversion !
;

: split_path_and_query
  get_path_and_query :QMARK _split2 strtok path !
  0 :QMARK _split2 strtok query !
;

: hash_assign
  dup "=" strfind
  if
    "=" _split_hash strtok
    0 "=" _split_hash strtok
    swap h!
  else
    drop
  endif
  0 _split_hash !
;

: _split_query_string_helper
  0 "&" _split_q strtok dup
  if
    strdup hash_assign
    _split_query_string_helper
  else
    drop
  endif
;

: split_query_string
  get_query
  if
    get_query
    strdup "&" _split_q strtok dup
    if
      strdup hash_assign
      _split_query_string_helper
    else
      drop
    endif
  endif
;

: process_request
  split_request_topline
  split_path_and_query
  split_query_string
;

: _print_hash_table_helper
  1 + dup
  hkeys dup
  if
    dup
    get_query swap strfind
    if
      svpop swap dup svpush
      str+ :COLON str+ svpop h@ str+ "<br>\n" str+
      svpush
    else
      drop
    endif
    _print_hash_table_helper
  else
    drop svpop
  endif
;

: print_hash_table
  get_query
  if
    svpush -1 _print_hash_table_helper
  endif
;

: copy_header_to_buffer
  # ( zeroed_buf )
  HTTP_HTML_HEADER str+
  "<html>\n<body>\n" str+
;

: copy_footer_to_buffer
  "</body>\n</html>\n" str+
;
