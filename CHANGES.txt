2020-05-01
* Ok, maybe I'll be nice and announce: the `fread` word has changed API. The old parameter
  pattern was: <num_bytes_to_read> <file_ptr>, and an automatic buffer was created for the work.
  I then realized it would be better to make the user/caller supply the buffer, and return
  the end of the buffer on success, so that concats are easy like in `mempcpy`. In addition, `fread`
  could have a similar calling pattern that would allow easy "chaining" of the returns to repeatedly
  concat the read-in string from the <file>. So now, the parameters on the stack are:
  <buf_ptr> <file_ptr> <num_bytes_to_read>, and it will return the new ENDING point of the
  buffer, which is essentially the input <buf_ptr> + <num_bytes_read_in_successfully>

2020-03-06
* refuse to update this file anymore when there is version control!

2019-05-11
* logic_ops simplification/refactor.
* adding 'true' and 'false' constants
* adding a logic_ops test in the 'examples' folder

2019-05-07
* 'do/redo' is now 'times/again' - again, distinguishing ourselves
  from Forth

2019-05-05
* finished implementation of 'if-else-endif'

2019-04-14
* big change: strings now just use "string" double-quotes, not their own
  `s"` token, which was the old way, derived from Forth.

2019-04-12
* fix to an import string bug

2019-03-03
* Got rid of `qdo` and `qredo` in favor of making `do` have that
  functionality. So, `do` is now a counted loop with `i`, `j`, `k` references.
* Edited all examples to reflect this change.
* changed the `stdin` catch logic to be better for cross-platform compiles
  in the `revertinput` function.
* expanded the `fractions.dc` example to include multiplication and division
  of fractions.
* adding this file.
* add the `circle.dc` example.
