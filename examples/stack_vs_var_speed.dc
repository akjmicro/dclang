"string.dc" import

1024 1024 16 * * const TESTCOUNT
"mykey" const :mykey

var myvar
1 myvar !

1 4 !  # 'raw' integer variable

######################
# The test functions #
######################

: time_stack
  "Timing the stack:                  " print
  clock
  1
  TESTCOUNT times
    dup drop
  again
  drop
  clock swap - 2 6 .rj cr
;

: time_svstack
  "Timing the save stack:             " print
  clock
  1 svpush
  TESTCOUNT times
    0 svpick drop
  again
  clock swap - 2 6 .rj cr
;

: time_locals { somevar }
  "Timing local variables:            " print
  clock
  TESTCOUNT times
    somevar drop
  again
  clock swap - 2 6 .rj cr
;

: time_var_raw_int
  "Timing variables using integers:   " print
  clock
  TESTCOUNT times
    4 @ drop
  again
  clock swap - 2 6 .rj cr
;

: time_var
  "Timing normal named variables:     " print
  clock
  TESTCOUNT times
    myvar @ drop
  again
  clock swap - 2 6 .rj cr
;

: time_hash
  "Timing hash lookup:                " print
  ####################
  # fill with values #
  ####################
  1024 times
    hex8token hex8token h!
  again
  1 :mykey h!
  ########################
  # end fill with values #
  ########################
  clock
  TESTCOUNT times
    :mykey h@ drop
  again
  clock swap - 2 6 .rj cr
;

: time_tree
  "Timing tree lookup:                " print
  tmake drop
  1024 times
    0 hex8token hex8token t! drop
  again
  0 :mykey 23 t! drop
  clock
  TESTCOUNT times
    0 :mykey t@ drop
  again
  clock swap - 2 6 .rj cr
;

: do_math_swap
  "Timing math with swap:             " print
  clock
    TESTCOUNT times
        1 2 +
          3 4 +
          swap
        /
      drop
    again
  clock swap - 2 6 .rj cr
;

: do_math_save
  "Timing math with svpush and svpop: " print
  clock
    TESTCOUNT times
        1 2 + svpush
        3 4 +
          svpop
        /
      drop
    again
  clock swap - 2 6 .rj cr
;

: do_math_var
  "Timing math with ! and @:          " print
  clock
    TESTCOUNT times
        1 2 + 0 !
        3 4 +
          0 @
        /
      drop
    again
  clock swap - 2 6 .rj cr
;

#################
# Run the tests #
#################

time_stack
time_svstack

5 time_locals

time_var_raw_int

time_var

time_hash
time_tree

do_math_swap
do_math_save
do_math_var
