# Makes MIDI music via `digit_sum`

"math.dc" import
"midi.dc" import
"redis_midi.dc" import

# our EDO var
665 midi_edo !

: generate_interval
  / log2 midi_edo @ * round
;

: O- midi_edo @ - ;

: O+ midi_edo @ + ;

64 63 generate_interval const 64_63
16 15 generate_interval const 16_15
 4  3 generate_interval const  4_3
 3  2 generate_interval const  3_2
32 21 generate_interval const 32_21
 8  5 generate_interval const  8_5

create scale 4_3 O- O- ,
               0 O-    ,
             4_3 O-    ,
             0         , 64_63    , 16_15    , 4_3    , 3_2 , 32_21 , 8_5 ,
             0 O+      , 64_63 O+ , 16_15 O+ , 4_3 O+ ,
var dummy
var scale_size
dummy scale -
scale_size !

var x
0 x !

: x++
  x @ 1 +
  x !
;

: _get_next_note
  x @
    redis_midi.get_mul
  *
    redis_midi.get_base
  digit_sum
    redis_midi.get_wrap
  %
    redis_midi.get_mode
  +
    scale_size @
  absmod
    scale
  + @
    redis_midi.get_transpose
  +
  x++
;

: _main
  block_sigint
  ###
    100
      _get_next_note
      dup svpush
        0
  edo_degree_to_midi
  ###
    redis_midi.get_on_gate
  sleep
        0 svpop 0
  edo_degree_to_midi
    redis_midi.get_off_gate
  sleep
  unblock_sigint
  _main
;

: main
  "You are now entering an endless loop, hit CTRL-C to stop..." print cr
  "Notice that you won't be able to stop until a note off event hits." print cr
  "In this way, the notes end cleanly!" print cr
  _main
;

main

panic
