"midi.dc" import
"redis_music.dc" import
"permutations.dc" import

var perm_obj
8 setup_permutation
perm_obj !

create lengths 1 , 2 , 1 , 2 , 1 , 2 , 2 ,
var len_idx
0 len_idx !
len_idx lengths - const RHYTHM_CYCLE
41 midi_edo !

: generate_interval
  / log2 midi_edo @ * round
;

1 2 generate_interval const 1_2
9 8 generate_interval const 9_8
4 3 generate_interval const 4_3
3 2 generate_interval const 3_2
7 4 generate_interval const 7_4
2 1 generate_interval const 2_1
9 4 generate_interval const 9_4

create scale 1_2 , 0 , 9_8 , 4_3 , 3_2 , 7_4 , 2_1 , 9_4 ,

: _get_len
  lengths len_idx @ RHYTHM_CYCLE % + @
;

: _advance_len_idx
  len_idx dup @ 1 + swap !
;

: _get_local_on_len
  redis_music.get_on_gate _get_len *
;

: _get_local_off_len
  redis_music.get_off_gate _get_len *
;

: _midi_change_ring
  block_sigint
  ###
    100
      scale
        perm_obj @ next_permutation_item
      +
      @
        redis_music.get_transpose
      +
      dup svpush
    0
  edo_degree_to_midi
  ###
  _get_local_on_len sleep
  0 svpop 0 edo_degree_to_midi
  _get_local_off_len sleep
  _advance_len_idx
  unblock_sigint
  _midi_change_ring
;

: midi_change_ring
  "You are now entering an endless loop, hit CTRL-C to stop..." print cr
  "Notice that you won't be able to stop until a note off event hits." print cr
  "In this way, the notes end cleanly!" print cr
  _midi_change_ring
;

midi_change_ring
