# Makes MIDI music via `digit_sum`

"math.dc" import
"music.dc" import

# our EDO var
41 edo !

: generate_interval
  / log2 edo @ * round
;

: O- edo @ - ;

: O+ edo @ + ;

9 8 generate_interval const  2ND
5 4 generate_interval const  3RD
7 5 generate_interval const ^4TH
3 2 generate_interval const  5TH
8 5 generate_interval const  6TH
7 4 generate_interval const H7TH

create scale 0 O- ,                           5TH O- ,      H7TH O- ,
             0     , 2ND    , 3RD    , ^4TH , 5TH    , 6TH, H7TH ,
             0 O+ ,  2ND O+ , 3RD O+ ,
var dummy
var scale_size
dummy scale -
scale_size !

create rhythm  5 , 3 , 5 , 2 , 3 , 2 , 1 , 5 , 2 , 3 , 6 , 2 ,
create vol     1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 1 , 0 ,

vol rhythm -
const RHYTHM_SIZE

var x
0 x !

var y
0 y !

: x++
  x @ 1 +
  x !
;

: y++
  y @ 1 + dup  # ( y1val y1val )
  RHYTHM_SIZE >
  if
    drop 0 y !
  else
    y !
  endif
;

: _get_next_note
  x @ redis_music.get_mul *
    redis_music.get_base
  digit_sum
    redis_music.get_mode
  +
    scale_size @
  absmod
    scale
  + @
    redis_music.get_transpose
  +
  x++
;

: _get_next_rhythm
  rhythm y @ + @
  y++
;

: _get_next_vol
  vol y @ + @ 8 <<
;

: _main
  block_sigint
  ###
    100
      _get_next_note
      dup svpush
        0
  edo_degree_to_midi
  ###
    redis_music.get_on_gate
  _get_next_rhythm dup svpush
  *
  sleep
          svpop 0 svpop 0
  edo_degree_to_midi
    redis_music.get_off_gate
  *
  sleep
  unblock_sigint
  _main
;

: main
  "You are now entering an endless loop, hit CTRL-C to stop..." print cr
  "Notice that you won't be able to stop until a note off event hits." print cr
  "In this way, the notes end cleanly!" print cr
  _main
;

main

panic
