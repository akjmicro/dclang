# An implementation of Heap's algorithm

"deprecated_stack.dc" import

create counters 0 , 0 , 0 , 0 , 0 ,
create pmvalues 1 , 2 , 3 , 4 , 5 ,
var idx
5 const PSIZE

: $idx idx @ ;
: idx->1 1 idx ! ;

: idx++
    idx
      dup
      @
        1
      +
      swap
  !
;

: pmvalues[idx] pmvalues idx @ + ;
: $pmvalues[idx] pmvalues[idx] @ ;
: counters[idx] counters idx @ + ;
: $counters[idx] counters[idx] @ ;

: counters[idx]++
      counters idx @
    +
      dup @
        1
      +
      swap
  !
;

: counters[idx]->0
    0
        counters idx @
      +
  !
;

: pmvalues[counters[idx]]
  pmvalues $counters[idx] +
;

: add1 dup @ 1 + swap ! ;

: show_vals
    PSIZE
  times
        pmvalues i
      +
      @
    .
  again
  cr
;

: pmswap
          2dup @    # ( a b a b@ ) ( )
        svpush    # ( a b a ) ( b@ )
        @           # ( a b a@ ) ( b@ )
        swap        # ( a a@ b ) ( b@ )
    !               # ( a ) ( b@ )
      svpop       # ( a b@ )
      swap          # ( b@ a )
  !                 # ( )
;

: is_even? 2 % 0 = ;

: _permute_helper
      $idx PSIZE
    <
  if
        $counters[idx] $idx
      <
    if
        $idx
        is_even?
      if
          pmvalues
            pmvalues[idx]
        pmswap
      else
            pmvalues[counters[idx]]
            pmvalues[idx]
        pmswap
      endif
      show_vals
      counters[idx]++
      idx->1
    else
      counters[idx]->0
      idx++
    endif
    _permute_helper
  endif
;

: permute
  show_vals
  1 idx !
  _permute_helper
;

permute
