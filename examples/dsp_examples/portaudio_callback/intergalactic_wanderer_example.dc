#############################################################################
# Ok, it's nothing musically spectacular, but it does demonstrate triggers  #
# and is a good sounding board for the development of the `reverb` word.    #
# Oh, and it's boring and relxing enough to be a good sleep aid.            #
#############################################################################

"dsp.dc"  import
"math.dc" import

var curtrig
var lasttrig

90 const BASS_PITCH
41 const EDO

: to_edo_factor
  / log2 EDO * round
    EDO
  /
    2
    swap
  pow
;

create gamut  1  1  to_edo_factor ,
              9  8  to_edo_factor ,
             19 16  to_edo_factor ,
              4  3  to_edo_factor ,
              3  2  to_edo_factor ,
              5  3  to_edo_factor ,
             16  9  to_edo_factor ,
              2  1  to_edo_factor ,
var gamut_guard
var gamut_size    gamut_guard gamut -    gamut_size !
var gamut_idx

var pitch
0.01 0.01 make_port  pitch_port1
0.01 0.01 make_port  pitch_port2

var slmem1
var slmem2
var slmem3
var slmem4

# reverb structure for fdn_reverb
make_reverb_struct my_reverb

: _next_note
    gamut_idx @
      3 randint 1 -
    +
      gamut_size @
    absmod
    dup gamut_idx !
    gamut + @
      BASS_PITCH 4 *
    *
  pitch !
;

: intergalactic_wanderer_example
  2.7 metro  curtrig !
  curtrig @ lasttrig @ > if
    _next_note
  endif
  ################
  # melody voice #
  ################
    slmem1
      pitch @ pitch_port1 port
        0.37
    sineloop 0.1 *
  0.1 panmix
    slmem2
      pitch @ 1.004 * pitch_port2 port
        0.37
    sineloop 0.1 *
  0.9 panmix
  ##############
  # bass drone #
  ##############
    slmem3
      BASS_PITCH
        0.29
    sineloop 0.1 *
  0.3 panmix
    slmem4
      BASS_PITCH 1.5024 *
        0.29
    sineloop 0.1 *
  0.7 panmix
  ##########
  # output #
  ##########
    lchan @ 0.5 * rchan @ 0.5 *
      my_reverb
        0.9 0.97
      reverb
    1.0 panmix
  0.0 panmix
  stereo_stack
  curtrig @ lasttrig !
  t+
;
