"dsp.dc" import
"music.dc" import
"sequencer.dc" import

var my_ampport
var my_pitchport
var my_fbport

var tempo  :BASS_TEMPO redis_music.get_x_tempo     tempo !
var myvol              redis_music.get_bass_vol    myvol !
var pitch              redis_music.get_base_pitch  pitch !
var curtrig
var lasttrig
var sl
var lpmem

create my_iter 16 , 0 ,
               1 , 1 , 1 , 1 ,
               1 , 1 , 1 , 7 8 / ,
               1 , 1 , 1 , 4 3 / ,
               4 3 / , 3 2 / , 3 2 / , 3 4 / ,

: metronome_simple
    0.1 tempo @ gate  curtrig !
    curtrig @ lasttrig @ >
    if
      # check if tempo changed
      :BASS_TEMPO redis_music.get_x_tempo  dup tempo @ <>
      if tempo ! else drop endif
      # check if vol changed
      redis_music.get_bass_vol dup myvol @ <>
      if myvol ! else drop endif
      # simple pitch sequence using `iterator`
        redis_music.get_base_pitch
          my_iter iterator
        *
      pitch !
    endif
    curtrig @
      my_ampport 0.002 0.55
    port
      sl
        pitch @
          my_pitchport 0.0005 0.01
        port
          curtrig @
            my_fbport 0.0001 0.3
          port
          0.47 0.2 rand * + *
          0.2  0.1 rand * + +
      sineloop
    *
    lpmem 0.7 lowpass myvol @ *
  0.5 panmix
  stereo_out
  t+
  curtrig @ lasttrig !
  metronome_simple
;

metronome_simple
