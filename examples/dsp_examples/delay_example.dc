"dsp.dc" import

# a local constant for 'change-frequency'
0.7575 1.333333 * const CHANGE_FREQ

# amp envelope stuff:
0.05 0.9 make-port env-port
var fmamp 0 fmamp !
0.02 0.03 make-port pitch-port

# filter setup:
make-biquad lpstruct

# delay setup:
make-delay-line mydelay
mydelay init-delay-line

# random pitch setup:
# A Wilson CPS hexany (2, 3, 5, 9)
create pitch-choices 2 3 * , 2 5 * , 2 9 * , 3 5 * , 3 9 * , 5 9 * , 
var current-pitch    6 current-pitch !
var lasttrig
var curtrig
var rntrg

: octfac 2 swap log2 1.0 % pow ;

: delay-example
  # random trigger
  23 randtrig dup curtrig !
  # reference array for port and portamento call
  env-port port
  # route to 'fmamp' variable:
  fmamp !

  # change the pitch variable randomly, in sync with the trigger:
  curtrig @ lasttrig @ >
  if
    pitch-choices 6 randint + @ current-pitch !
  else
  endif
  # FM oscillator:
  current-pitch @ octfac 440 * 3 * 0.5 *
  pitch-port port  
  1.501 0.19
  fm fmamp @ *
  # cut the highs a bit:
  lpstruct
  false
  #curtrig @ lasttrig @ >   
  700 2.6 biquad-lp
  mydelay 0.95 delay-read
  2dup
  # delay ampilcation
  0.65 *
  # osc/filter amplification
  1.8 *
  0.35 panmix
  0.65 panmix
  # output
  stereo-out
  # 89% feedback
  + 0.5 * mydelay delay-write
  # update trigger state
  curtrig @ lasttrig !
  # update clock
  t+
  delay-example
;

delay-example
