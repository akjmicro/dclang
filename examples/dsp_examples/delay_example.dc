"dsp.dc" import

# a local constant for 'change-frequency'
0.7575 1.333333 * const CHANGE_FREQ

# amp envelope stuff:
0.04 0.9 make-port env-port
var ampenv 0 ampenv !
0.02 0.03 make-port pitch-port

# a sineloop variable
var mysl

# filter setup:
make-hc-filter mylp

# delay setup:
make-delay-line mydelay
mydelay init-delay-line

# random pitch setup:
# A Wilson CPS hexany (2, 3, 5, 9)
create pitch-choices 0 , 5 , 13 , 18 , 23 , 31 , 36 , 41 ,
var current-pitch    0 current-pitch !
var lasttrig
var curtrig
var rntrg

: octfac 31 / 2 swap pow ;

: delay-example
  # random trigger
  0.01 randtrig dup curtrig !
  # reference array for port and portamento call
  env-port port
  # route to 'ampenv' variable:
  ampenv !

  # change the pitch variable randomly, in sync with the trigger:
  curtrig @ lasttrig @ >
  if
    pitch-choices 8 randint + @ current-pitch !
  else
  endif
  # sineloop oscillator:
  mysl
  current-pitch @ octfac 256 *
  ampenv @ 0.89 * 0.4 + sineloop ampenv @ *
  # boost amplitude
  2.3 *
  # cut the highs a bit:
  mylp 2750 0.3 hc-lowpass
  mydelay 0.95 delay-read
  2dup
  # delay ampilcation
  0.65 *
  # osc/filter amplification
  1.8 *
  0.35 panmix
  0.65 panmix
  # output
  stereo-out
  # 89% feedback
  + 0.5 * mydelay delay-write
  # update trigger state
  curtrig @ lasttrig !
  # update clock
  t+
  delay-example
;

delay-example
