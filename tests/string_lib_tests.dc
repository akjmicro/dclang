"string.dc" import

var teststr
"thisBLAHisBLAHa littleBLAH testBLAHstring"
teststr !

"BLAH" const :BLAH

# run `substr_count` as a test!
teststr @ :BLAH

substr_count

# make an assertion that our test string has 4 instances
# of "BLAH"
4 = assert

teststr @ :BLAH "BLAHFOO" strreplace
"thisBLAHFOOisBLAHFOOa littleBLAHFOO testBLAHFOOstring"
str= assert

teststr @ "NOTFOUND" " " strreplace
teststr @
str= assert

var buf 128 mkbuf buf !
buf @ "This will" str+
" be concatted " str+
"together!" str+
drop
"This will be concatted together!" buf @
str= assert
buf @ free

# testing the str_between word:
"blueberry" "apple" "cranberry" str_between
true = assert
"apple" "apple" "cranberry" str_between
true = assert
"cranberry" "apple" "cranberry" str_between
true = assert
"acai" "apple" "cranberry" str_between
false = assert
"lingonberry" "apple" "cranberry" str_between
false = assert
